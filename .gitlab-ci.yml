image: "dev.gitlab.org:5005/gitlab/gitlab-build-images:ruby-2.3.5-golang-1.8-git-2.13-chrome-62.0-node-8.x-yarn-1.2-postgresql-9.6"

.default-cache: &default-cache
  key: "ruby-235-with-yarn"
  paths:
    - vendor/ruby
    - .yarn-cache/

.push-cache: &push-cache
  cache:
    <<: *default-cache
    policy: push

.pull-cache: &pull-cache
  cache:
    <<: *default-cache
    policy: pull

variables:
  MYSQL_ALLOW_EMPTY_PASSWORD: "1"
  RAILS_ENV: "test"
  NODE_ENV: "test"
  SIMPLECOV: "true"
  GIT_DEPTH: "20"
  GIT_SUBMODULE_STRATEGY: "none"
  GET_SOURCES_ATTEMPTS: "3"
  KNAPSACK_RSPEC_SUITE_REPORT_PATH: knapsack/${CI_PROJECT_NAME}/rspec_report-master.json
  KNAPSACK_SPINACH_SUITE_REPORT_PATH: knapsack/${CI_PROJECT_NAME}/spinach_report-master.json
  FLAKY_RSPEC_SUITE_REPORT_PATH: rspec_flaky/report-suite.json

before_script:
  - bundle --version
  - source scripts/utils.sh
  - source scripts/prepare_build.sh

stages:
  - build
  - prepare
  - test
  - post-test
  - pages
  - post-cleanup

# Predefined scopes
.dedicated-runner: &dedicated-runner
  retry: 1
  tags:
    - gitlab-org

.tests-metadata-state: &tests-metadata-state
  <<: *dedicated-runner
  variables:
    TESTS_METADATA_S3_BUCKET: "gitlab-ce-cache"
  before_script:
    - source scripts/utils.sh
  artifacts:
    expire_in: 31d
    paths:
      - knapsack/
      - rspec_flaky/

.use-pg: &use-pg
  services:
    - postgres:9.2
    - redis:alpine

.use-mysql: &use-mysql
  services:
    - mysql:latest
    - redis:alpine

# Skip all jobs except the ones that begin with 'docs/'.
# Used for commits including ONLY documentation changes.
# https://docs.gitlab.com/ce/development/writing_documentation.html#testing
.except-docs: &except-docs
  except:
    - /(^docs[\/-].*|.*-docs$)/

.rspec-metadata: &rspec-metadata
  <<: *dedicated-runner
  <<: *pull-cache
  <<: *except-docs
  stage: test
  script:
    - JOB_NAME=( $CI_JOB_NAME )
    - export CI_NODE_INDEX=${JOB_NAME[-2]}
    - export CI_NODE_TOTAL=${JOB_NAME[-1]}
    - export KNAPSACK_REPORT_PATH=knapsack/${CI_PROJECT_NAME}/${JOB_NAME[0]}_node_${CI_NODE_INDEX}_${CI_NODE_TOTAL}_report.json
    - export KNAPSACK_GENERATE_REPORT=true
    - export SUITE_FLAKY_RSPEC_REPORT_PATH=${FLAKY_RSPEC_SUITE_REPORT_PATH}
    - export FLAKY_RSPEC_REPORT_PATH=rspec_flaky/all_${JOB_NAME[0]}_${CI_NODE_INDEX}_${CI_NODE_TOTAL}_report.json
    - export NEW_FLAKY_RSPEC_REPORT_PATH=rspec_flaky/new_${JOB_NAME[0]}_${CI_NODE_INDEX}_${CI_NODE_TOTAL}_report.json
    - export FLAKY_RSPEC_GENERATE_REPORT=true
    - export CACHE_CLASSES=true
    - cp ${KNAPSACK_RSPEC_SUITE_REPORT_PATH} ${KNAPSACK_REPORT_PATH}
    - '[[ -f $FLAKY_RSPEC_REPORT_PATH ]] || echo "{}" > ${FLAKY_RSPEC_REPORT_PATH}'
    - '[[ -f $NEW_FLAKY_RSPEC_REPORT_PATH ]] || echo "{}" > ${NEW_FLAKY_RSPEC_REPORT_PATH}'
    - scripts/gitaly-test-spawn
    - knapsack rspec "--color --format documentation"
  artifacts:
    expire_in: 31d
    when: always
    paths:
      - coverage/
      - knapsack/
      - rspec_flaky/
      - tmp/capybara/

.rspec-metadata-pg: &rspec-metadata-pg
  <<: *rspec-metadata
  <<: *use-pg

.rspec-metadata-mysql: &rspec-metadata-mysql
  <<: *rspec-metadata
  <<: *use-mysql

.spinach-metadata: &spinach-metadata
  <<: *dedicated-runner
  <<: *pull-cache
  <<: *except-docs
  stage: test
  script:
    - JOB_NAME=( $CI_JOB_NAME )
    - export CI_NODE_INDEX=${JOB_NAME[-2]}
    - export CI_NODE_TOTAL=${JOB_NAME[-1]}
    - export KNAPSACK_REPORT_PATH=knapsack/${CI_PROJECT_NAME}/${JOB_NAME[0]}_node_${CI_NODE_INDEX}_${CI_NODE_TOTAL}_report.json
    - export KNAPSACK_GENERATE_REPORT=true
    - export CACHE_CLASSES=true
    - cp ${KNAPSACK_SPINACH_SUITE_REPORT_PATH} ${KNAPSACK_REPORT_PATH}
    - scripts/gitaly-test-spawn
    - knapsack spinach "-r rerun" -b || retry '[[ -e tmp/spinach-rerun.txt ]] && bundle exec spinach -b -r rerun $(cat tmp/spinach-rerun.txt)'
  artifacts:
    expire_in: 31d
    when: always
    paths:
      - coverage/
      - knapsack/
      - tmp/capybara/

.spinach-metadata-pg: &spinach-metadata-pg
  <<: *spinach-metadata
  <<: *use-pg

.spinach-metadata-mysql: &spinach-metadata-mysql
  <<: *spinach-metadata
  <<: *use-mysql

.only-canonical-masters: &only-canonical-masters
  only:
    - master@gitlab-org/gitlab-ce
    - master@gitlab-org/gitlab-ee
    - master@gitlab/gitlabhq
    - master@gitlab/gitlab-ee

setup-test-env:
  <<: *use-pg
  <<: *dedicated-runner
  <<: *except-docs
  stage: prepare
  cache:
    <<: *default-cache
  script:
    - node --version
    - yarn install --frozen-lockfile --cache-folder .yarn-cache
    - bundle exec rake gitlab:assets:compile
    - bundle exec ruby -Ispec -e 'require "spec_helper" ; TestEnv.init'
    - scripts/gitaly-test-build # Do not use 'bundle exec' here
  artifacts:
    expire_in: 7d
    paths:
      - node_modules
      - public/assets
      - tmp/tests

# Static analysis jobs
.ruby-static-analysis: &ruby-static-analysis
  <<: *pull-cache
  variables:
    SIMPLECOV: "false"
    SETUP_DB: "false"

.rake-exec: &rake-exec
  <<: *ruby-static-analysis
  <<: *dedicated-runner
  <<: *except-docs
  <<: *pull-cache
  stage: test
  script:
    - bundle exec rake $CI_JOB_NAME

karma:
  <<: *use-pg
  <<: *dedicated-runner
  <<: *except-docs
  <<: *pull-cache
  stage: test
  variables:
    BABEL_ENV: "coverage"
    CHROME_LOG_FILE: "chrome_debug.log"
  script:
    - scripts/gitaly-test-spawn
    - sed -i "s/timeout: 2000/timeout: 60000/g" node_modules/karma/static/karma.js
    - bundle exec rake gettext:po_to_json
    - bundle exec rake karma
  coverage: '/^Statements *: (\d+\.\d+%)/'
  artifacts:
    name: coverage-javascript
    expire_in: 31d
    when: always
    paths:
    - chrome_debug.log
    - coverage-javascript/
